/**
	有 100 百扇门，编号分别为 （1 - 100），打开编号为 n 的门，那么编号为 k * n（k * n <= 100）的开关状态相反，
	从第 1 扇门开到第 100 扇门，最后有多少门是开着的？

	1 因子有 1，最后是开
	2 因子有 1、2，最后是关
	3 因子有 1、3，最后是关
	4 因子有 1、2、4，最后开
	... 
	因子个数是奇数的门最后都是开的,因子个数是偶数的最后都是关闭的 
	[1, 100] 中因子个数是奇数的只有完全平方数 1、4、9、16、25、36、49、64、81、100 
	（因为对一个数 x 来说，存在因子 m，必然存在另一个因子 x / m，只有完全平方数的平方根对应的因子是其自己，故其有奇数个因子。）
*/
public class OpenDoorNumber {
	public static void main(String[] args) {
		int num = 100;
		int count = 0;
		for(int i = 1; i * i <= num; i++) {
			count++;
		}
		System.out.println("最后开着的门为: " + count);
	}
}